<UserControl
	x:Class="GitApp.ViewModelView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:GitApp">
	<UserControl.Resources>
		<Style
			x:Key="ButtonBorder"
			TargetType="Border">
			<Style.Setters>
				<Setter
					Property="Background"
					Value="{StaticResource BackgroundDarkBrush}" />
				<Setter
					Property="BorderThickness"
					Value="2" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource BorderDarkBrush}" />
			</Style.Setters>
			<Style.Triggers>
				<Trigger
					Property="IsMouseOver"
					Value="true">
					<Setter
						Property="Background"
						Value="{StaticResource BackgroundNormalBrush}" />
				</Trigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition
				Height="75" />
			<RowDefinition
				Height="*" />
		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition
				Width="*" />
			<ColumnDefinition
				Width="auto" />
			<ColumnDefinition
				Width="3*" />
		</Grid.ColumnDefinitions>

		<Border
			Style="{StaticResource ButtonBorder}">
			<Grid>
				<ToggleButton
					Background="Transparent"
					BorderThickness="0"
					IsChecked="{Binding ElementName=Popup, Path=IsOpen}">
					<DockPanel>
						<Image
							Margin="10"
							DockPanel.Dock="Left"
							Source="/Resources/Branch.png"
							Width="16"
							Height="16" />
						<Image
							Margin="10"
							DockPanel.Dock="Right"
							Source="/Resources/DownArrow.png"
							Width="16"
							Height="16" />
						<StackPanel
							Margin="10"
							VerticalAlignment="Center"
							Orientation="Vertical">
							<TextBlock
								FontWeight="Bold"
								Text="{Binding ProjectName}" />
							<TextBlock
								Opacity="0.7"
								Text="{Binding GitStatus.Branch.Name}" />
						</StackPanel>
					</DockPanel>
					<ToggleButton.Style>
						<Style
							TargetType="ToggleButton"
							BasedOn="{StaticResource {x:Type ToggleButton}}">
							<Style.Triggers>
								<DataTrigger
									Binding="{Binding IsOpen, ElementName=Popup}"
									Value="True">
									<Setter
										Property="IsEnabled"
										Value="False" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</ToggleButton.Style>
				</ToggleButton>
				<Popup
					x:Name="Popup"
					StaysOpen="False"
					PlacementTarget="{Binding ElementName=PopupButton}"
					Placement="Bottom"
					MinWidth="400"
					MaxHeight="200"
					AllowsTransparency="True"
					VerticalOffset="1">
					<Border
						x:Name="brd"
						BorderThickness="1"
						BorderBrush="{x:Static SystemColors.WindowFrameBrush}"
						Background="{StaticResource WindowBackgroundBrush}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Height="*" />
							</Grid.RowDefinitions>

							<Button
								Content="New Branch"
								Command="{Binding NewBranchCMD}"
								Margin="5" />

							<ListView
								Grid.Row="1"
								Margin="5"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Stretch"
								ItemsSource="{Binding GitStatus.Branches}">
								<ListView.ItemContainerStyle>
									<Style
										TargetType="{x:Type ListViewItem}"
										BasedOn="{StaticResource {x:Type ListViewItem}}">
										<Setter
											Property="HorizontalContentAlignment"
											Value="Stretch" />
									</Style>
								</ListView.ItemContainerStyle>
								<ListView.ItemTemplate>
									<DataTemplate>
										<DockPanel>
											<Button
												Visibility="{Binding IsCurrentBranch, Converter={local:ValueTypeConverter}, ConverterParameter=Not}"
												Command="{Binding SwitchToBranchCMD}"
												DockPanel.Dock="Right"
												Margin="5"
												Content="Checkout" />
											<TextBlock
												DockPanel.Dock="Right"
												Margin="5"
												Visibility="{Binding IsCurrentBranch, Converter={local:ValueTypeConverter}}"
												Foreground="Green"
												Text="CURRENT"
												Opacity="0.7" />
											<TextBlock
												DockPanel.Dock="Right"
												Margin="5"
												Visibility="{Binding IsRemote, Converter={local:ValueTypeConverter}}"
												Text="REMOTE"
												Opacity="0.7" />
											<TextBlock
												Margin="5"
												Text="{Binding Name}" />
										</DockPanel>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>
						</Grid>
					</Border>
				</Popup>
			</Grid>
		</Border>

		<TabControl
			SelectedIndex="{Binding SelectedTab, Mode=OneWayToSource}"
			Grid.Row="1">
			<TabItem
				Header="Changes">
				<DockPanel>
					<DockPanel
						Margin="6,5,0,5"
						DockPanel.Dock="Top">
						<CheckBox
							DockPanel.Dock="Left"
							IsChecked="{Binding GitCommit.ChangeMultiSelect, Mode=TwoWay}" />
						<TextBlock
							HorizontalAlignment="Center"
							Text="{Binding GitCommit.ChangeList.Count, StringFormat={}{0} Changes}" />
					</DockPanel>

					<Grid
						Visibility="{Binding GitLog.UndoableLastCommit, Converter={local:NullOrZeroConverter}, ConverterParameter=Not}"
						DockPanel.Dock="Bottom">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
							<ColumnDefinition
								Width="auto" />
						</Grid.ColumnDefinitions>

						<TextBlock
							Text="{Binding GitLog.UndoableLastCommit}" />
						<Button
							Grid.Column="1"
							Command="{Binding GitCommit.UndoCMD}"
							Content="Undo" />
					</Grid>

					<Button
						IsEnabled="{Binding GitCommit.CanCommit}"
						DockPanel.Dock="Bottom"
						Content="Commit changes"
						Command="{Binding GitCommit.CommitCMD}" />

					<local:MultilineTextEditor
						DockPanel.Dock="Bottom"
						Text="{Binding GitCommit.CommitMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

					<Grid
						DockPanel.Dock="Bottom">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
							<ColumnDefinition
								Width="*" />
						</Grid.ColumnDefinitions>

						<local:AutoCompleteTextBox
							Grid.Column="0"
							ItemsSource="{Binding GitLog.CommitTypes}"
							PromptText="Type"
							Text="{Binding GitCommit.CommitType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

						<local:AutoCompleteTextBox
							Grid.Column="1"
							ItemsSource="{Binding GitLog.CommitScopes}"
							PromptText="Scope"
							Text="{Binding GitCommit.CommitScope, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					</Grid>

					<ListView
						SelectedItem="{Binding GitCommit.SelectedChange, Mode=TwoWay}"
						ItemsSource="{Binding GitCommit.ChangeList}">
						<ListView.ItemContainerStyle>
							<Style
								TargetType="{x:Type ListViewItem}"
								BasedOn="{StaticResource {x:Type ListViewItem}}">
								<Setter
									Property="HorizontalContentAlignment"
									Value="Stretch" />
							</Style>
						</ListView.ItemContainerStyle>
						<ListView.ItemTemplate>
							<DataTemplate>
								<DockPanel
									Margin="3">
									<CheckBox
										VerticalAlignment="Center"
										DockPanel.Dock="Left"
										IsChecked="{Binding Added}" />
									<Image
										DockPanel.Dock="Right"
										Source="{Binding Icon}"
										ToolTip="{Binding ChangeType}" />
									<TextBlock
										Text="{Binding File}" />
								</DockPanel>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</DockPanel>
			</TabItem>
			<TabItem
				Header="History">
				<ListView
					ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					SelectedItem="{Binding GitLog.SelectedCommit, Mode=TwoWay}"
					ItemsSource="{Binding GitLog.Log}">
					<ListView.ItemContainerStyle>
						<Style
							TargetType="{x:Type ListViewItem}"
							BasedOn="{StaticResource {x:Type ListViewItem}}">
							<Setter
								Property="HorizontalContentAlignment"
								Value="Stretch" />
						</Style>
					</ListView.ItemContainerStyle>
					<ListView.ItemTemplate>
						<DataTemplate>
							<Grid
								ToolTip="{Binding Message}">
								<Grid
									Margin="5">
									<Grid.RowDefinitions>
										<RowDefinition
											Height="auto" />
										<RowDefinition
											Height="auto" />
									</Grid.RowDefinitions>

									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="*" />
										<ColumnDefinition
											Width="auto" />
									</Grid.ColumnDefinitions>

									<TextBlock
										Text="{Binding Title}" />
									<TextBlock
										Grid.Row="1"
										Opacity="0.5"
										Text="{Binding Author}" />

									<TextBlock
										Visibility="{Binding IsLocal, Converter={local:ValueTypeConverter}}"
										HorizontalAlignment="Right"
										VerticalAlignment="Center"
										Grid.Column="1"
										Grid.RowSpan="2"
										Foreground="Green"
										Text="Local" />
								</Grid>

								<Grid.Style>
									<Style
										TargetType="Grid">
										<Setter
											Property="Background"
											Value="Transparent" />
										<Style.Triggers>
											<DataTrigger
												Binding="{Binding IsLocal}"
												Value="True">
												<Setter
													Property="Background"
													Value="{StaticResource BackgroundDarkBrush}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
							</Grid>

						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
			</TabItem>
		</TabControl>

		<GridSplitter
			Background="{StaticResource WindowBackgroundLightBrush}"
			Grid.Column="1"
			Grid.RowSpan="2"
			HorizontalAlignment="Center"
			VerticalAlignment="Stretch"
			Width="5" />

		<Grid
			Grid.Column="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="200" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>

			<Border
				IsEnabled="{Binding GitPush.PushInProgress, Converter={local:ValueTypeConverter}, ConverterParameter=Not}"
				Visibility="{Binding GitStatus.NumberCommitsToPush, Converter={local:NullOrZeroConverter}, ConverterParameter=Not}"
				Style="{StaticResource ButtonBorder}"
				MouseLeftButtonDown="PushClick">
				<DockPanel>
					<Image
						Margin="10"
						DockPanel.Dock="Left"
						Source="/Resources/Push.png"
						Width="16"
						Height="16" />
					<Border
						Margin="5"
						CornerRadius="10"
						DockPanel.Dock="Right"
						VerticalAlignment="Center"
						Background="{StaticResource BackgroundLightBrush}">
						<StackPanel
							Orientation="Horizontal">
							<TextBlock
								Margin="10,5,5,5"
								VerticalAlignment="Center"
								Text="{Binding GitStatus.NumberCommitsToPush}" />
							<Image
								Margin="0,5,10,5"
								DockPanel.Dock="Left"
								Source="/Resources/Push.png"
								Width="8"
								Height="8" />
						</StackPanel>
					</Border>
					<TextBlock
						Margin="10"
						VerticalAlignment="Center"
						FontWeight="Bold"
						Text="Push" />
				</DockPanel>
			</Border>

			<Border
				IsEnabled="{Binding GitPull.PullInProgress, Converter={local:ValueTypeConverter}, ConverterParameter=Not}"
				Visibility="{Binding GitStatus.NumberCommitsToPull, Converter={local:NullOrZeroConverter}, ConverterParameter=Not}"
				Style="{StaticResource ButtonBorder}"
				ToolTip="{Binding GitStatus.PullMessage}"
				ToolTipService.ShowDuration="999999999"
				MouseLeftButtonDown="PullClick">
				<DockPanel>
					<Image
						Margin="10"
						DockPanel.Dock="Left"
						Source="/Resources/Pull.png"
						Width="16"
						Height="16" />
					<Border
						Margin="5"
						CornerRadius="10"
						DockPanel.Dock="Right"
						VerticalAlignment="Center"
						Visibility="{Binding GitStatus.NumberCommitsToPush, Converter={local:NullOrZeroConverter}, ConverterParameter=Not}"
						Background="{StaticResource BackgroundLightBrush}">
						<StackPanel
							Orientation="Horizontal">
							<TextBlock
								Margin="10,5,5,5"
								VerticalAlignment="Center"
								Text="{Binding GitStatus.NumberCommitsToPush}" />
							<Image
								Margin="0,5,10,5"
								DockPanel.Dock="Left"
								Source="/Resources/Push.png"
								Width="8"
								Height="8" />
						</StackPanel>
					</Border>
					<Border
						Margin="5"
						CornerRadius="10"
						DockPanel.Dock="Right"
						VerticalAlignment="Center"
						Background="{StaticResource BackgroundLightBrush}">
						<StackPanel
							Orientation="Horizontal">
							<TextBlock
								Margin="10,5,5,5"
								VerticalAlignment="Center"
								Text="{Binding GitStatus.NumberCommitsToPull}" />
							<Image
								Margin="0,5,10,5"
								DockPanel.Dock="Left"
								Source="/Resources/Pull.png"
								Width="8"
								Height="8" />
						</StackPanel>
					</Border>
					<TextBlock
						Margin="10"
						VerticalAlignment="Center"
						FontWeight="Bold"
						Text="Pull" />
				</DockPanel>
			</Border>

			<Border
				Background="{StaticResource BackgroundDarkBrush}"
				BorderThickness="2"
				BorderBrush="{StaticResource BorderDarkBrush}"
				Visibility="{Binding GitStatus.UpToDate, Converter={local:ValueTypeConverter}}">
				<TextBlock
					Margin="20"
					VerticalAlignment="Center"
					Opacity="0.7"
					Text="No Changes" />
			</Border>

			<Border
				IsEnabled="{Binding GitPush.PushInProgress, Converter={local:ValueTypeConverter}, ConverterParameter=Not}"
				Visibility="{Binding GitStatus.Branch.IsRemote, Converter={local:ValueTypeConverter}, ConverterParameter=Not}"
				Style="{StaticResource ButtonBorder}"
				MouseLeftButtonDown="PublishBranchClick">
				<DockPanel>
					<Image
						Margin="10"
						DockPanel.Dock="Left"
						Source="/Resources/Push.png"
						Width="16"
						Height="16" />
					<TextBlock
						Margin="5"
						VerticalAlignment="Center"
						Text="Publish Branch" />
				</DockPanel>
			</Border>
		</Grid>

		<TabControl
			Grid.Row="1"
			Grid.Column="2">
			<TabItem
				Header="Diff">
				<Grid>
					<ScrollViewer
						Visibility="{Binding ShowChangesDiff, Converter={local:ValueTypeConverter}}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Width="*" />
								<ColumnDefinition
									Width="*" />
							</Grid.ColumnDefinitions>

							<ItemsControl
								ItemsSource="{Binding GitDiff.SelectedDiff.Item1}">
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock
											Background="{Binding Brush}"
											Text="{Binding Text}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>

							<ItemsControl
								Grid.Column="1"
								ItemsSource="{Binding GitDiff.SelectedDiff.Item2}">
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock
											Background="{Binding Brush}"
											Text="{Binding Text}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Grid>
					</ScrollViewer>

					<Grid
						Visibility="{Binding ShowChangesDiff, Converter={local:ValueTypeConverter}, ConverterParameter=Not}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
							<ColumnDefinition
								Width="auto" />
							<ColumnDefinition
								Width="4*" />
						</Grid.ColumnDefinitions>

						<ListView
							SelectedItem="{Binding GitLog.SelectedCommit.SelectedFile, Mode=TwoWay}"
							ItemsSource="{Binding GitLog.SelectedCommit.CommitContents}">
							<ListView.ItemTemplate>
								<DataTemplate>
									<TextBlock
										Text="{Binding Name}" />
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>

						<GridSplitter
							Background="{StaticResource WindowBackgroundLightBrush}"
							Grid.Column="1"
							HorizontalAlignment="Center"
							VerticalAlignment="Stretch"
							Width="5" />

						<ScrollViewer
							Grid.Column="2">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										Width="*" />
									<ColumnDefinition
										Width="*" />
								</Grid.ColumnDefinitions>

								<ItemsControl
									ItemsSource="{Binding GitLog.SelectedCommit.SelectedFile.Contents.Item1}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<TextBlock
												Background="{Binding Brush}"
												Text="{Binding Text}" />
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>

								<ItemsControl
									Grid.Column="1"
									ItemsSource="{Binding GitLog.SelectedCommit.SelectedFile.Contents.Item2}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<TextBlock
												Background="{Binding Brush}"
												Text="{Binding Text}" />
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</Grid>
						</ScrollViewer>
					</Grid>
				</Grid>

			</TabItem>
			<TabItem
				Header="Console">
				<DockPanel>
					<DockPanel
						DockPanel.Dock="Bottom">
						<Button
							DockPanel.Dock="Right"
							Content="Clear"
							Command="{Binding ClearConsoleCMD}" />
						<TextBox
							HorizontalAlignment="Stretch"
							KeyDown="ArbitraryCMDKeyDown"
							Text="{Binding ArbitraryCMD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					</DockPanel>
					<ListView
						ItemsSource="{Binding CMDLines}">
						<ListView.ItemTemplate>
							<DataTemplate>
								<TextBlock
									Text="{Binding Text}"
									Foreground="{Binding Brush}" />
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</DockPanel>
			</TabItem>
		</TabControl>
	</Grid>
</UserControl>
